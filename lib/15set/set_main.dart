// множества - неупорядоченный тип данных, т.е. по индексу обратиться нелья!
// общая схема создания множества
// Set<тип> имя_множества = <тип> {значение 1, значение 2, ...}

void setMain() {
  //1 способ
  Set<int> setInt = <int>{1,4,5,7,8};
  print(setInt);
  //2 способ
  var setInt2 = <int>{2,4,6,7,11,621};
  print(setInt2);
  //3 способ
  Set<int> setInt3 = {1,4,5,7,8};
  //print(setInt3);
  //4 динамический тип данных
  var dSet= {1, 3, 4.5, 'fdg', 5, 'zsq'};
  print(dSet);

  //for (var item in setInt2) { print(item); }

  //print(setInt3[0]); - ОШИБКА! Нельзя обратиться по типу данных
  /*
  first - возвращает первый элемент списка
  last - последний элемент множества
  length - количество элементов
  isEmpty - true, если множество пустое
  firstWhere - получить первый элемент который удовлетворяет условию
  */

  Set<int> eSet = {};
  print('первый элемент мнонжества: ${setInt.first}');
  print('последний элемент мнонжества: ${setInt.last}');
  print('пустое множество: ${eSet.isEmpty}');

  setInt2.firstWhere((element) => element%2==0);
  print('Первый чётный - ${setInt2.firstWhere((element) => element%2==0)}');

  //основные методы
  /*
  add(значение) - добавляет множество
  addAll(коллекция) - добавляет в множество все уникальные элементы коллекции
  clear() - удаляет все элементы из множества
  difference(другое множестов) - возвращает разницу между текущим множеством и другим множеством, оставит только разные элементы
  intersection(другое множество) - возвращает пересечение между двумя множествами
  union(другое множество) - возвращает объединение двух множеств
  remove(значение) - удаляет элемент из множества
  removeAll(коллекция) - удаляет из множества все элементы коллекции
  contains(элемент) - возвращает tru если элемент есть во множестве
  join([String separator = '']) - объединяет все элементы множества в строку
  skip(количество) - возвращает множество без первых count элементов
  take(количество) - возвращает множество без последних count элементов
  where((element) => false) - возвращает коллекцию элементы которой соответствуют условию, т.е. просит указать анонимную функцию
  */

  setInt.add(450);
  setInt.add(450);

  print('объединение setInt и setInt2 : ${setInt.union(setInt2)}');
  print('пересечение setInt и setInt2 : ${setInt.intersection(setInt2)}');
  print('вычитание setInt и setInt2 : ${setInt.difference(setInt2)}');

  String setStr = setInt.join(', ');
  print('множество в виде строки: $setStr');

}